{"version":3,"sources":["Todo.js","TodoList.js","Header.js","Footer.js","App.js","index.js"],"names":["Todo","id","title","completed","onSelected","deleteTodo","className","cn","type","checked","onChange","htmlFor","onClick","defaultProps","TodoList","state","isToggleOn","handleClick","setState","prevState","props","onAllSelected","this","todos","onTodoSelected","completedStatus","value","map","todo","key","e","React","Component","Header","handleTitle","target","trim","handleSubmit","event","preventDefault","onTodo","Date","onSubmit","placeholder","Footer","noComlpetedTodo","onFilteredTodos","href","text","App","filterType","addTodo","todoId","select","getVisibleTodos","filter","todoItem","find","index","indexOf","splice","length","every","counter","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e328377.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames/bind';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ id, title, completed, onSelected, deleteTodo }) => (\n// handleChecked = (event) => {\n//   const id = event.target.id;\n// console.log('event.target',event.target);\n\n  //   this.props.onSelected(id);\n  //   this.setState(prevState => ({\n  //     completed: !prevState.completed\n  //   }))\n  // }\n\n  <li className={cn({ completed: completed === true })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        checked={completed}\n        onChange={onSelected}\n      />\n      <label htmlFor={id}>{title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={deleteTodo}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onSelected: PropTypes.func,\n  deleteTodo: PropTypes.func,\n};\n\nTodo.defaultProps = {\n  onSelected: null,\n  deleteTodo: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  state={\n    isToggleOn: true,\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n    }));\n\n    this.props.onAllSelected(this.state.isToggleOn);\n  }\n\n  render() {\n    const { todos, onTodoSelected, deleteTodo } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={this.props.completedStatus}\n          value={this.state.isToggleOn}\n          onChange={this.handleClick}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <Todo\n              {...todo}\n              key={todo.id}\n              onSelected={e => onTodoSelected(todo.id, e)}\n              deleteTodo={() => deleteTodo(todo.id)}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n  completedStatus: PropTypes.bool.isRequired,\n  onAllSelected: PropTypes.func.isRequired,\n  onTodoSelected: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  deleteTodo: null,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state={\n    title: '',\n    id: '',\n    completed: false,\n  }\n\n  handleTitle = ({ target }) => (\n    this.setState({\n      title: target.value.trim(),\n    })\n  )\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onTodo({\n      ...this.state,\n      id: +new Date(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleTitle}\n          />\n        </header>\n      </form>\n\n    );\n  }\n}\n\nHeader.propTypes = {\n  onTodo: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ noComlpetedTodo, onFilteredTodos }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {noComlpetedTodo}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={e => onFilteredTodos(e.target.text)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={e => onFilteredTodos(e.target.text)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={e => onFilteredTodos(e.target.text)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  noComlpetedTodo: PropTypes.number.isRequired,\n  onFilteredTodos: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Header from './Header';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filterType: '',\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  }\n\n  onTodoSelected = (todoId, e) => {\n    // console.log('e.todo',e);\n\n    // e.stopPropagation();\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  onAllSelected = (select) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (select) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n\n        return {\n          ...todo,\n          completed: false,\n        };\n      }),\n    }));\n  }\n\n  onFilteredTodos = (filterType) => {\n    this.setState({\n      filterType,\n    });\n  }\n\n  getVisibleTodos = () => {\n    const { todos, filterType } = this.state;\n\n    if (filterType === 'Active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (filterType === 'Completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  deleteTodo = (todoId) => {\n    // console.log('e.todo',e);\n\n    // e.stopPropagation();\n    this.setState((prevState) => {\n      const todoItem = prevState.todos.find(todo => todo.id === todoId);\n      const index = prevState.todos.indexOf(todoItem);\n\n      prevState.todos.splice(index, 1);\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  }\n\n  render() {\n    const { todos, filterType } = this.state;\n    const completedStatus = todos.length === 0\n      ? false\n      : todos.every(todo => todo.completed);\n    const counter = todos.filter(todo => !todo.completed).length;\n    const visibleTodos = this.getVisibleTodos(filterType);\n\n    return (\n      <section className=\"todoapp\">\n        <Header onTodo={this.addTodo} />\n        <TodoList\n          todos={visibleTodos}\n          completedStatus={completedStatus}\n          onFilteredTodos={this.onFilteredTodos}\n          onAllSelected={this.onAllSelected}\n          onTodoSelected={this.onTodoSelected}\n          deleteTodo={this.deleteTodo}\n        />\n\n        <Footer\n          noComlpetedTodo={counter}\n          onFilteredTodos={this.onFilteredTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}